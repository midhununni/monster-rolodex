{"version":3,"sources":["components/card/card.js","components/cardList/cardList.js","components/search/search.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","Search","placeholder","handleChange","type","onChange","App","e","setState","search","target","value","state","fetch","then","response","json","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAGaA,EAAO,SAAAC,GAChB,OACI,sBAAKC,UAAU,gBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,6BAAKN,EAAMI,QAAQG,YCJdC,EAAW,SAAAR,GACpB,OACI,qBAAKC,UAAU,YAAf,SACCD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAC3B,cAAC,EAAD,CAAuBA,QAAUA,GAAtBA,EAAQC,UCLdM,G,MAAS,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACjC,OAEA,uBAAOZ,UAAY,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCoCnEG,E,kDAnCb,aAAe,IAAD,8BACZ,gBAOFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,OAAQF,EAAEG,OAAOC,SAPjC,EAAKC,MAAQ,CACXb,SAAU,GACVU,OAAQ,IAJE,E,qDAcd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAf,GAAQ,OAAI,EAAKS,SAAS,CAAET,kB,oBAEtC,WAAU,IAAD,EACsBkB,KAAKL,MAA1Bb,EADD,EACCA,SAAUU,EADX,EACWA,OACZS,EAAmBnB,EAASoB,QAAO,SAAAzB,GAAO,OAC9CA,EAAQE,KAAKwB,cAAcC,SAASZ,EAAOW,kBAE7C,OACE,sBAAK7B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAQW,YAAY,kBAAkBC,aAAcc,KAAKd,eACzD,cAAC,EAAD,CAAUJ,SAAUmB,W,GA7BVI,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.af6c67c8.chunk.js","sourcesContent":["import React from 'react';\nimport './card.css'\n\nexport const Card = props => {\n    return(\n        <div className=\"cardContainer\">\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\n        <h2>{props.monster.name}</h2>\n        <h4>{props.monster.email}</h4>\n        </div>\n    )\n}","import React from 'react';\nimport './cardList.style.css';\nimport {Card} from '../card/card.js'\n\nexport const CardList = props => {\n    return(\n        <div className=\"card-list\">\n        {props.monsters.map(monster => \n        <Card key={monster.id} monster ={monster}/>\n        )}\n        </div>\n    )\n}","import React from 'react'\nimport './search.css'\n\nexport const Search = ({placeholder, handleChange}) => {\n    return (\n        \n    <input className = \"search\" type=\"search\" placeholder={placeholder} onChange={handleChange} />\n       \n    )\n\n}\n\n","import './App.css';\nimport React from 'react';\nimport { CardList } from './components/cardList/cardList.js'\nimport { Search } from './components/search/search.js'\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      search: ''\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({ search: e.target.value })\n  }\n\n\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(monsters => this.setState({ monsters }))\n  }\n  render() {\n    const { monsters, search } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(search.toLowerCase())\n    )\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <Search placeholder=\"search monsters\" handleChange={this.handleChange} />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}